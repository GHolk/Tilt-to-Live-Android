<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>myDots</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>ds_list_create()</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var ypos, xpos, myEnemy, temp, randfrom, length, leftlimit, rightlimit, toplimit, bottomlimit, centerx, centery;

randfrom = ds_list_find_value(global.dirList,irandom_range(0,ds_list_size(global.dirList)-1)) // random direction
ds_list_delete(global.dirList,ds_list_find_index(global.dirList,randfrom))// Can't have 2 blocks w/ same direction
length = irandom_range(20,40)

leftlimit = ARENA_LEFTBOUND + global.roomShift + ENEMY_RADIUS
rightlimit = ARENA_RIGHTBOUND + global.roomShift - ENEMY_RADIUS
toplimit = ARENA_TOPBOUND + ENEMY_RADIUS
bottomlimit = ARENA_BOTTOMBOUND - ENEMY_RADIUS


if randfrom="left" then {   
    temp=random_range(toplimit, bottomlimit - length) //random position from top left to bottom left
    ypos=temp
    xpos=leftlimit
    y=ypos-5
    x=xpos-5
    repeat(2) {
        repeat(length) {
            myEnemy = instance_create(xpos,ypos,enemy_spawn)
            with myEnemy event_user(0)
            myEnemy.myDirection = 0
            myEnemy.mySpeedRatio = -1.75
            myEnemy.new_border = 1
            myEnemy.ignoreBorder = true
            myEnemy.parentBlock = id
            myEnemy.customized = true
            ds_list_add(myDots,myEnemy)
            ypos+=6
        }
        ypos=temp
        xpos+=8
    }
    return 0
}

if randfrom="right" then {
    temp=random_range(toplimit, bottomlimit - length) //random position from top left to bottom left
    ypos=temp
    xpos=rightlimit - ENEMY_RADIUS
    y=ypos-5
    x=xpos-5
    repeat(2) {
        repeat(length) {
            myEnemy = instance_create(xpos,ypos,enemy_spawn)
            with myEnemy event_user(0)
            myEnemy.myDirection = 180
            myEnemy.mySpeedRatio = -1.75
            myEnemy.new_border = 1
            myEnemy.ignoreBorder = true
            myEnemy.parentBlock = id
            myEnemy.customized = true
            ds_list_add(myDots,myEnemy)
            ypos+=6
        }
        ypos=temp
        xpos+=8
    }
}

if randfrom="up" then {
    temp=random_range(leftlimit,rightlimit - length) //random position from top left to bottom left
    ypos=toplimit
    xpos=temp
    y=ypos-5
    x=xpos-5
    repeat(2) {
        repeat(length) {
            myEnemy = instance_create(xpos,ypos,enemy_spawn)
            with myEnemy event_user(0)
            myEnemy.myDirection = 270
            myEnemy.mySpeedRatio = -1.75
            myEnemy.new_border = 1
            myEnemy.ignoreBorder = true
            myEnemy.parentBlock = id
            myEnemy.customized = true
            ds_list_add(myDots,myEnemy)
            xpos+=6
        }
        xpos=temp
        ypos+=8
    }
}

if randfrom="down" then {
    temp=random_range(leftlimit, rightlimit - length) //random position from top left to bottom left
    ypos=bottomlimit - ENEMY_RADIUS
    xpos=temp
    y=ypos-5
    x=xpos-5
    repeat(2) {
        repeat(length) {
            myEnemy = instance_create(xpos,ypos,enemy_spawn)
            with myEnemy event_user(0)
            myEnemy.myDirection = 90
            myEnemy.mySpeedRatio = -1.75
            myEnemy.new_border = 1
            myEnemy.ignoreBorder = true
            myEnemy.parentBlock = id
            myEnemy.customized = true
            ds_list_add(myDots,myEnemy)
            xpos+=6
        }
        xpos=temp
        ypos+=8
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>65</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ds_list_size(myDots) = 0 then {
   instance_destroy()
   return 0
}
var index;
index = 0
repeat (ds_list_size(myDots)) {
       with (ds_list_find_value(myDots, index)) {
            if myVortex &lt;&gt; noone then with parentBlock { //If a dot is affected by a vortex
                  var newindex, newVortex;
                  newindex = 0
                  newVortex = ds_list_find_value(myDots, index).myVortex //This is the vortex that is affecting the dot
                  repeat (ds_list_size(myDots)) {
                         with (ds_list_find_value(myDots, newindex)) {
                              if myVortex = noone then {
                                 myVortex = newVortex
                                 nearvortex=true
                                 gravity_direction = point_direction(x,y,myVortex.x,myVortex.y)
                                 gravity = 0.025*(2*speed-0.5)
                                 if speed &gt; 8 then speed = 8
                                 alarm[2]=30
                                 ignoreBorder = false //Set dot to bounce off borders
                              }
                         }
                         newindex += 1
                  }
                  instance_destroy() //We affected all dots in the block, KAROSHI!!!
                  return 0
            }
       }
       index += 1
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>5</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
