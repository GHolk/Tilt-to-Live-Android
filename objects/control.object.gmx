<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>UI_pause_button</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-14</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firstformation</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"unimportant"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initializing the settings for each mode

if room_get_name(room) == "classic" then {
    diff = 0.6
    dotwave=10
    
    //dot spawn rates
    maxrate = 3 //5 per second
    minrate = 0.5 //1 per 2 seconds
    timeforminrate = 18000 //18000 steps (5 min) to go from minrate to maxrate
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
    minwave = 10
    maxwave = 40
    waveincrement = 600
    
    //30
    formationList[0] = "formation_block()"
    formationList[1] = "formation_block()"
    formationList[2] = "formation_circle1()"
    formationList[3] = "formation_circle1()"
    formationList[4] = "formation_pong()"

    //60
    formationList[5] = "formation_topBottomLine()"
    formationList[6] = "formation_leftLine()"
    formationList[7] = "formation_rightLine()"

    //90
    formationList[8] = "formation_circle2()"
    formationList[9] = "formation_circle2()"
    formationList[10] = "formation_border()"

    //105
    formationList[11] = "formation_random()"
    formationList[12] = "formation_random()"

    //120
    formationList[13] = "formation_grid()"
    formationList[14] = "formation_circle3()"
    }

else {
    //30
    formationList[0] = "formation_block()"
    formationList[1] = "formation_circle1()"
    formationList[2] = "formation_circle2()"
    formationList[3] = "formation_pong()"


    //60
    formationList[4] = "formation_pong()"
    formationList[5] = "formation_block()"
    formationList[6] = "formation_random()"

    //75
    formationList[7] = "formation_topBottomLine()"
    formationList[8] = "formation_topBottomLine()"
    formationList[9] = "formation_circle3()"
    formationList[10] = "formation_leftLine()"
    formationList[11] = "formation_rightLine()"

    //105
    formationList[12] = "formation_leftrightLine()"
    formationList[13] = "formation_random()"
    formationList[14] = "formation_border()"

    //120
    formationList[15] = "formation_border()"
    formationList[16] = "formation_leftrightLine()"
    formationList[17] = "formation_grid()"

    //150
    formationList[18] = "formation_grid()"
    formationList[19] = "formation_block()"
    formationList[20] = "formation_pong()"
    

if room_get_name(room) == "codered" then {
    diff = 0.85
    dotwave=15
    
    maxrate = 4 
    minrate = 0.75 
    timeforminrate = 18000 
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
    minwave = 20
    maxwave = 55
    minferaxwave = 3
    maxferaxwave = 15
    waveincrement = 500}


else if room_get_name(room) == "crazy" then {
    diff = 1.1
    dotwave=20
    
    maxrate = 4 
    minrate = 1 
    timeforminrate = 18000 
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
    minwave = 20
    maxwave = 40
    minferaxwave = 5
    maxferaxwave = 30
    waveincrement = 900} //actually 2 more dots per 900 counts. One is a ferax, one is normal
    
}

crazywave=0


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activatedIndex</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>600</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>600</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>600</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>120</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>3</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enable cheats. Comment this out to disable them.
if instance_number(control_cheats) = 0 then instance_create(0,0,control_cheats)
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moving the pause button around when the screen is larger

/*if not(YoYo_GetPlatform()==os_windows or YoYo_GetPlatform()==os_macosx) { //stretch the display in android devices.
    if (view_wview[0]-GAME_WIDTH)&gt;=64 {
    x=(3*view_wview[0]+GAME_WIDTH)/4
    y=GAME_HEIGHT/2
    image_xscale=(view_wview[0]-1024)/128
    image_yscale=image_xscale
    exit }
}*/

x=1000+global.roomShift
y=24
image_xscale=0.5
image_yscale=0.5
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make a secondary formation, based on what the first was
if firstformation="circle" then formation_circle2();
else if firstformation="topbottom" then formation_topBottomLine();
else if firstformation="left" then formation_leftLine();
else if firstformation="right" then formation_rightLine();
else if firstformation="leftright" then {formation_rightLine();formation_leftLine();}
else if firstformation="border" then formation_border();

firstformation="unimportant"


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dotwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>crazywave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Script to unlock formations
/*

if room_get_name(room)=="classic"{
//30
formationList[0] = "formation_block()"
formationList[1] = "formation_block()"
formationList[2] = "formation_circle1()"
formationList[3] = "formation_circle1()"
formationList[4] = "formation_pong()"

//60
formationList[5] = "formation_topBottomLine()"
formationList[6] = "formation_leftLine()"
formationList[7] = "formation_rightLine()"

//90
formationList[8] = "formation_circle2()"
formationList[9] = "formation_circle2()"
formationList[10] = "formation_border()"

//105
formationList[11] = "formation_random()"
formationList[12] = "formation_random()"

//120
formationList[13] = "formation_grid()"
formationList[14] = "formation_circle3()"
}

if room_get_name(room)=="codered"{
//30
formationList[0] = "formation_block()"
formationList[1] = "formation_circle1()"
formationList[2] = "formation_circle2()"
formationList[3] = "formation_pong()"


//60
formationList[4] = "formation_pong()"
formationList[5] = "formation_block()"
formationList[6] = "formation_random"

//75
formationList[7] = "formation_topBottomLine()"
formationList[8] = "formation_topBottomLine()"
formationList[9] = "formation_circle3()"
formationList[10] = "formation_leftLine()"
formationList[11] = "formation_rightLine()"

//105
formationList[12] = "formation_leftrightLine()"
formationList[13] = "formation_random()"
formationList[14] = "formation_border()"

//120
formationList[15] = "formation_border()"
formationList[16] = "formation_leftrightLine()"
formationList[17] = "formation_grid()"

//150
formationList[18] = "formation_grid()"
formationList[19] = "formation_block()"
formationList[20] = "formation_pong()"
}

*/
if room_get_name(room)=="classic"{
if activatedIndex = -1 then {activatedIndex += 5; alarm[2] = 1800}
else if activatedIndex = 4 then {activatedIndex += 3; alarm[2] = 1800}
else if activatedIndex = 7 then {activatedIndex += 3; alarm[2] = 900}
else if activatedIndex = 10 then {activatedIndex += 2; alarm[2] = 900}
else if activatedIndex = 12 then activatedIndex += 2
}

if room_get_name(room)=="codered" or room_get_name(room)=="crazy"{
if activatedIndex = -1 then {activatedIndex += 4; alarm[2] = 1800}
else if activatedIndex = 3 then {activatedIndex += 3; alarm[2] = 900}
else if activatedIndex = 6 then {activatedIndex += 5; alarm[2] = 1800}
else if activatedIndex = 11 then {activatedIndex += 3; alarm[2] = 900}
else if activatedIndex = 14 then {activatedIndex += 3; alarm[2] = 1800}
else if activatedIndex = 17 then activatedIndex += 3;
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>firstformation</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>"unimportant"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>time</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1800</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>action_if_dice(3)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a wave of dots
dotwave=min(maxwave,(time/waveincrement)+minwave)
if room_get_name(room) == "crazy" then {
crazywave = min(maxferaxwave,(time/waveincrement)+minferaxwave)}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dotwave</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Script to spawn a formation
var randform;
randform = irandom_range(0,activatedIndex)
if (formationList[randform])="formation_block()" then formation_block()
if (formationList[randform])="formation_circle1()" then {formation_circle1();firstformation="circle";}
if (formationList[randform])="formation_circle2()" then {formation_circle2();firstformation="circle";}
if (formationList[randform])="formation_circle3()" then {formation_circle3();firstformation="circle";}
if (formationList[randform])="formation_pong()" then {formation_pong();firstformation="pong";}
if (formationList[randform])="formation_topBottomLine()" then {formation_topBottomLine();firstformation="topbottom";}
if (formationList[randform])="formation_leftLine()" then formation_leftLine();firstformation="left";
if (formationList[randform])="formation_rightLine()" then formation_rightLine();firstformation="right";
if (formationList[randform])="formation_leftrightLine()" then {formation_rightLine();formation_leftLine();firstformation="leftright";}
if (formationList[randform])="formation_grid()" then {formation_grid();firstformation="grid";}
if (formationList[randform])="formation_random()" then formation_random()
if (formationList[randform])="formation_border()" then {formation_border();firstformation="border";}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///With probability, create a wave of dots anyway (and a few mandatory feraxes)
if (action_if_dice(5)) {
dotwave=min(maxwave,(time/waveincrement)+minwave)
}
if room_get_name(room) == "crazy" or (room_get_name(room) == "codered" and time &gt; 14400) then {
crazywave = minferaxwave}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_get_name(room) == "codered" or (room_get_name(room) == "classic" and time &gt; 14400)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Script to spawn a secondary formation
var probability;
if room_get_name(room) == "codered" {probability = max(30000/(control.time+300),2)}
else if room_get_name(room) == "classic" {probability = max(30000/(control.time-14100),2)}

if action_if_dice(probability) {

var randform;
randform = irandom_range(0,activatedIndex)
if (formationList[randform])="formation_block()" then formation_block()

if (formationList[randform])="formation_circle1()" {
    if firstformation!="circle" {formation_circle1();} else {alarm[4]=60;} } //this alarm prevents a stacked formation by delaying the duplicate by 60 frames

if (formationList[randform])="formation_circle2()" {
    if firstformation!="circle" {formation_circle2();} else {alarm[4]=60;} }

if (formationList[randform])="formation_circle3()" {
    if firstformation!="circle" {formation_circle3();} else {alarm[4]=60;} }

if (formationList[randform])="formation_pong()" {
    if firstformation!="pong" {formation_pong();} else {formation_block();} } //not much use delaying a duplicated pong formation, going to spawn blocks instead

if (formationList[randform])="formation_topBottomLine()" {
    if firstformation!="topbottom" {formation_topBottomLine();} else {alarm[4]=60;} }

if (formationList[randform])="formation_leftLine()" {
    if firstformation!="left" and firstformation!="leftright" {formation_leftLine();} else {alarm[4]=60;} }

if (formationList[randform])="formation_rightLine()" {
    if firstformation!="right" and firstformation!="leftright" {formation_rightLine();} else {alarm[4]=60;} }

if (formationList[randform])="formation_leftrightLine()" {
    if firstformation!="left" and firstformation!="right" and firstformation!="leftright" {formation_rightLine();formation_leftLine();} else {alarm[4]=60;}  }

if (formationList[randform])="formation_grid()" {
    if firstformation!="grid" {formation_grid();} else {formation_random();} } //too mean to have 2 grids within 1 second of each other, going to spawn random flying dots instead &gt;:)

if (formationList[randform])="formation_random()" then formation_random()

if (formationList[randform])="formation_border()" {
    if firstformation!="border" {formation_border();} else {alarm[4]=60;} }
    
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_get_name(room) == "crazy" or (room_get_name(room) == "codered" and time &gt; 14400)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn extra feraxes
var probability, effectivetime;
if room_get_name(room) == "crazy" {effectivetime = time}
else if room_get_name(room) == "codered" {effectivetime = time-14400}

probability = max(30000/(effectivetime+300),2)


if action_if_dice(probability) {
crazywave = min(maxferaxwave-minferaxwave,(effectivetime/waveincrement))}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>300</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>421</id>
        <kind>3</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn basic waves before 30 seconds
dotwave=(time/waveincrement)+minwave

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>execute the stuff done in all cases</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset formation spawner, make waves last 2 seconds, set the random dot spawning rate

//reset formation spawner
alarm[1]=600


//make waves last only 2 seconds
alarm[3]=120

//set the random dot spawning rate
spawnrate=min(maxrate,time/increaseSpeed+minrate)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>diff</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>min(diff+0.05,3)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>301</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_alarm</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>600</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>-1</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn dots

var leftlimit, rightlimit, toplimit, bottomlimit;
leftlimit = ARENA_LEFTBOUND+global.roomShift+ENEMY_RADIUS
rightlimit = ARENA_RIGHTBOUND+global.roomShift-ENEMY_RADIUS
toplimit = ARENA_TOPBOUND+ENEMY_RADIUS
bottomlimit = ARENA_BOTTOMBOUND-ENEMY_RADIUS

if player.dead = 1 then return 0

//Spawn dots for the waves
if dotwave &gt; 0 {
   if action_if_dice(120/dotwave) then spawn_enemy_normal(random_range(leftlimit,rightlimit),random_range(toplimit,bottomlimit))}
if crazywave &gt; 0 {
   if action_if_dice(120/crazywave) and time&gt;1800 then spawn_enemy_ferax(random_range(leftlimit,rightlimit),random_range(toplimit,bottomlimit))}

//Spawn the random dots
if action_if_dice(60/spawnrate) then
   spawn_enemy_normal(random_range(leftlimit,rightlimit),random_range(toplimit,bottomlimit))
   
if os_is_paused() then {if instance_number(control_pause)=0 then instance_create(0,0,control_pause)}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>time</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(mouse_check_button_pressed(mb_left) or keyboard_check_pressed(vk_space))</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>UI_pause_button_down</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>(mouse_check_button_released(mb_left) or keyboard_check_released(vk_space))</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>541</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sprite_set</functionname>
        <codestring></codestring>
        <whoName>control</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>UI_pause_button</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>control_pause</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>control_pause</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>trash bin in case of error</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if room_get_name(room) == "classic" then dotwave=10
if room_get_name(room) == "codered" then dotwave=25
if room_get_name(room) == "crazy" then dotwave=30
crazywave=0

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if room_get_name(room)=="classic"{
//30
formationList[0] = "formation_block()"
formationList[1] = "formation_block()"
formationList[2] = "formation_circle1()"
formationList[3] = "formation_circle1()"
formationList[4] = "formation_pong()"

//60
formationList[5] = "formation_topBottomLine()"
formationList[6] = "formation_leftLine()"
formationList[7] = "formation_rightLine()"

//90
formationList[8] = "formation_circle2()"
formationList[9] = "formation_circle2()"
formationList[10] = "formation_border()"

//105
formationList[11] = "formation_random()"
formationList[12] = "formation_random()"

//120
formationList[13] = "formation_grid()"
formationList[14] = "formation_circle3()"
}

if room_get_name(room)=="codered" or room_get_name(room)=="crazy"{
//30
formationList[0] = "formation_block()"
formationList[1] = "formation_circle1()"
formationList[2] = "formation_circle2()"
formationList[3] = "formation_pong()"


//60
formationList[4] = "formation_pong()"
formationList[5] = "formation_block()"
formationList[6] = "formation_random()"

//75
formationList[7] = "formation_topBottomLine()"
formationList[8] = "formation_topBottomLine()"
formationList[9] = "formation_circle3()"
formationList[10] = "formation_leftLine()"
formationList[11] = "formation_rightLine()"

//105
formationList[12] = "formation_leftrightLine()"
formationList[13] = "formation_random()"
formationList[14] = "formation_border()"

//120
formationList[15] = "formation_border()"
formationList[16] = "formation_leftrightLine()"
formationList[17] = "formation_grid()"

//150
formationList[18] = "formation_grid()"
formationList[19] = "formation_block()"
formationList[20] = "formation_pong()"
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*Dot spawn rates

if room_get_name(room) == "classic" {
    maxrate = 5 //5 per second
    minrate = 0.5 //1 per 2 seconds
    timeforminrate = 18000 //18000 steps (5 min) to go from minrate to maxrate
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
}

if room_get_name(room) == "codered" {
        maxrate = 8 
    minrate = 0.75 
    timeforminrate = 18000 
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
}

if room_get_name(room) == "crazy" {
        maxrate = 11 
    minrate = 1 
    timeforminrate = 18000 
    increaseSpeed = timeforminrate/(maxrate-minrate)
    spawnrate = min(maxrate,time/increaseSpeed+minrate)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="82">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>keyboard_check_direct(vk_control)</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>223</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_current_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>404</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_number</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>control_pause</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>201</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_create_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>10</kind>
            <object>control_pause</object>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>332</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_end_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>31,31</point>
    <point>31,31</point>
  </PhysicsShapePoints>
</object>
